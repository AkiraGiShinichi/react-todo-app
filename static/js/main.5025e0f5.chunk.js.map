{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","prevProps","prevState","bgrColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","deleteTodo","axios","delete","then","response","filter","addTodoItem","post","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.5025e0f5.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted\");\r\n    }\r\n\r\n    render() {\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        }\r\n\r\n        const { completed, id, title } = this.props.todo\r\n\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={completed} \r\n                    onChange={() => this.props.handleChangeProps(id)}\r\n                />\r\n                <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                    Delete\r\n                </button>\r\n                <span style={completed ? completedStyle : null}>\r\n                    {title}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n// function TodoItem(props) {\r\n//     return <li>{props.todo.title}</li>\r\n// }\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    // <li>{todo.title}</li>\r\n                    <TodoItem \r\n                        key={todo.id} \r\n                        todo={todo} \r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\n// const Header = () => {\r\n//     const headerStyle = {\r\n//         padding: \"20px 0\",\r\n//         lineHeight: \"2em\",\r\n//     }\r\n\r\n//     return (\r\n//         <header style={headerStyle}>\r\n//             <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple Todo App</h1>\r\n//             <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\r\n//         </header>\r\n//     )\r\n// }\r\nclass Header extends Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgrColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n            // console.log(\"props change\");\r\n            document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n            document.getElementById(\"inH1\").style.backgroundColor = bgrColor;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const headerStyle = {\r\n            padding: \"20px 0\",\r\n            lineHeight: \"2em\",\r\n        }\r\n\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n                    Simple Todo App <span id=\"inH1\"></span>\r\n                </h1>\r\n                <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    };\r\n\r\n    onChange = e => {\r\n        // console.log(\"hello\");\r\n        this.setState({\r\n            // title: e.target.value\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // console.log(this.state.title);\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n            title: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Add Todo...\" \r\n                    value={this.state.title} \r\n                    name=\"title\"\r\n                    onChange={this.onChange} \r\n                />\r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4} from \"uuid\"\r\nimport axios from \"axios\"\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [],\r\n        show: false\r\n       };\r\n\r\n    handleChange = (id) => {\r\n        // console.log(\"clicked\", id);\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            }),\r\n            show: !this.state.show\r\n        })\r\n    }\r\n\r\n    deleteTodo = id => {\r\n        // console.log(\"deleted\", id);\r\n        // this.setState({\r\n        //     todos: [\r\n        //         ...this.state.todos.filter(todo => {\r\n        //             return todo.id !== id;\r\n        //         })\r\n        //     ]\r\n        // })\r\n        axios\r\n        .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n        .then(response => this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                    return todo.id != id\r\n                }),\r\n            ],\r\n        }))\r\n    }\r\n\r\n    addTodoItem = title => {\r\n        // console.log(title);\r\n        // const newTodo = {\r\n        //     id: uuidv4(),\r\n        //     title: title,\r\n        //     completed: false\r\n        // };\r\n        // this.setState({\r\n        //     todos: [ ...this.state.todos, newTodo ]\r\n        // });\r\n        axios\r\n        .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            title: title,\r\n            completed: false\r\n        })\r\n        .then(response => this.setState({\r\n            todos: [...this.state.todos, response.data]\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        //     params: {\r\n        //         _limit: 10\r\n        //     }\r\n        // })\r\n        // .then(response => console.log(response.data));\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n        .then(response => this.setState({ todos: response.data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {/* <h1>Hello from React</h1>\r\n                <p>I am a component</p>\r\n                <input type=\"checkbox\" checked=\"{true}\" /> */}\r\n\r\n                {/* {this.state.todos.map(todo => (\r\n                    <li>{todo.title}</li>\r\n                ))} */}\r\n\r\n                <Header headerSpan={this.state.show} />\r\n                <InputTodo addTodoProps={this.addTodoItem} />\r\n                <TodosList\r\n                    todos={this.state.todos}\r\n                    handleChangeProps={this.handleChange}\r\n                    deleteTodoProps={this.deleteTodo}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\n// const element = <h1>Hello Wolrd!</h1>;\r\n// console.log(element);\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));"],"sourceRoot":""}